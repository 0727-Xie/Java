如果一段代码中所需要的数据必须与其他代码共享，
那就看看这些共享数据的代码是否能保证在同一个线程中执行。

如果能保证，我们就可以把###共享数据的可见范围限制在同一个线程之内###，
这样，无须同步也能保证线程之间不出现数据争用的问题。

符合这种特点的应用并不少见，大部分使用消费队列的架构模式（如“生产者-消费者”模式）
都会将产品的消费过程尽量在一个线程中消费完。
其中最重要的一个应用实例就是经典 Web 交互模型中的“一个请求对应一个服务器线程”（Thread-per-Request）的处理方式，
这种处理方式的广泛应用使得很多 Web 服务端应用都可以使用###线程本地存储###来解决线程安全问题。
