Java 中有三个访问权限修饰符：
private、
protected、
public、
如果不加访问修饰符，表示包级可见。

可以对类或类中的成员（字段以及方法）加上访问修饰符。
类可见表示其它类可以用这个类创建实例对象。
成员可见表示其它类可以用这个类的实例对象访问到该成员；

protected 用于修饰成员，表示在继承体系中成员对于子类可见，但是这个访问修饰符对于类没有意义。

设计良好的模块会隐藏所有的实现细节，把它的 API（Application Programming Interface） 与它的实现清晰地隔离开来。
模块之间只通过它们的 API 进行通信，一个模块不需要知道其他模块的内部工作情况，
这个概念被称为信息隐藏或封装。
因此访问权限应当尽可能地使每个类或者成员不被外界访问。

如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别。
这是为了确保可以使用父类实例的地方都可以使用子类实例，也就是确保满足里氏替换原则。