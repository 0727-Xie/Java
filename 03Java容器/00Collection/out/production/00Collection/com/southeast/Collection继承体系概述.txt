1、Set
HashSet:基于哈希实现，支持快速查找，但不支持有序性操作，例如根据一个范围查找元素的操作。
        并且失去了元素的插入顺序信息，也就是说使用Iterator遍历HashSet得到的结果顺序是不确定的。
TreeSet:基于红黑树实现，支持有序性操作，但是查找顺序不如HashSet，
        HashSet平均查找次数的复杂度为 O(N/M),TreeSet则是O(logN)。
LinkedHashSet:具有HashSet的查找效率，且内部使用链表维护元素的插入顺序。

2、List
ArrayList:基于动态数组实现，支持随机访问。
Vector:和ArrayList类似，但是是线程安全的。
LinkedList:基于双向链表，只能顺序访问，但是可以快速的在链表中间插入和删除元素。
            不仅如此，LinkedList还可以用作栈、队列和双向队列。
3、Queue
LikedList:可以用它来实现双向队列。
PriorityQueue:基于堆结构实现。可以用它来实现优先队列。
