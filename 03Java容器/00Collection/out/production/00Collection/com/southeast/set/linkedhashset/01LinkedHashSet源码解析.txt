1、概览
LinkedHashSet继承自HashSet，
具有HashSet的查找效率，且内部使用链表维护元素的插入顺序。
（因为底层使用的是LinkedHashMap,LinkedHashMap内存维护了一个双向循环链表，用来维护插入顺序或者LRU顺序。）

public class LinkedHashSet<E>
    extends HashSet<E>
    implements Set<E>, Cloneable, java.io.Serializable {

    }

LinkedHashSet中
    public LinkedHashSet() {
        super(16, .75f, true);//TODO:调用父类HashSet的构造方法
    }
HashSet中
    HashSet(int initialCapacity, float loadFactor, boolean dummy) {
        map = new LinkedHashMap<>(initialCapacity, loadFactor);//TODO:底层使用的是LinkedHashMap
    }
LinkedHashMap中
    public LinkedHashMap(int initialCapacity, float loadFactor) {
            super(initialCapacity, loadFactor);
            accessOrder = false;//TODO:这里默认是使用的插入顺序。
        }
TODO:对于LinkedHashMap
继承自 HashMap，因此具有和 HashMap 一样的快速查找特性。
    public class LinkedHashMap<K,V> extends HashMap<K,V> implements Map<K,V>
TODO：内存维护了一个双向循环链表，用来维护插入顺序或者LRU顺序。
transient LinkedHashMap.Entry<K,V> head;
transient LinkedHashMap.Entry<K,V> tail;
